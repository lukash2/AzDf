{
	"name": "09_until_loop",
	"properties": {
		"activities": [
			{
				"name": "Place and process tickets until all tickets are sold",
				"type": "Until",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@variables('stopLoop')",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Place Orders",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[PlaceOrders]",
								"storedProcedureParameters": {
									"Customer": {
										"value": {
											"value": "@substring(guid(),0,5)",
											"type": "Expression"
										},
										"type": "String"
									},
									"TicketCount": {
										"value": {
											"value": "@rand(5,40)",
											"type": "Expression"
										},
										"type": "Int32"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "AzSql_ClassroomDB",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "Set stop loop",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Process Orders",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "stopLoop",
								"value": {
									"value": "@if(less(int(activity('Process Orders').output.firstRow.remaining_tickets),1),true,false)\n\n",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Process Orders",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "Place Orders",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "[dbo].[ProcessOrders]",
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "ProcessOrders",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "Set remaining tickets",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Process Orders",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "remainingTickets",
								"value": {
									"value": "@string(activity('Process Orders').output.firstRow.remaining_tickets)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "Append orders",
							"type": "AppendVariable",
							"dependsOn": [
								{
									"activity": "Process Orders",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "orders",
								"value": {
									"value": "@string(activity('Place Orders').output.firstRow.Customer)",
									"type": "Expression"
								}
							}
						}
					],
					"timeout": "0.00:02:00"
				}
			}
		],
		"concurrency": 1,
		"variables": {
			"orders": {
				"type": "Array",
				"defaultValue": []
			},
			"stopLoop": {
				"type": "Boolean",
				"defaultValue": false
			},
			"remainingTickets": {
				"type": "String",
				"defaultValue": "-1"
			}
		},
		"annotations": []
	}
}